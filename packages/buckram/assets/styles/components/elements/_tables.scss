////
/// @group elements
////

//============================================================================//
//                                  Tables                                    //
//============================================================================//

@import '../utilities';

// stylelint-disable property-no-unknown
@page landscape_table {
  prince-rotate-body: landscape;
 }
// stylelint-enable property-no-unknown

@if $type != 'web' {
  table {
    display: table;
    max-width: 100%;
    margin-top: $table-margin-top;
    margin-bottom: $table-margin-bottom;
    @if $type != 'prince' {
      overflow-x: scroll;
    }
    font-family: $table-font-family;
    font-size: $table-font-size;
    hyphens: $table-hyphens;
    @if $type == 'prince' {
      line-height: $table-line-height;
    }
    text-align: $table-align;
    border-collapse: collapse;
    border-top: $table-border-width solid if-map-get($line-color-1, $type);
    border-right: if-map-get($table-border-right-width, $type) if-map-get($table-border-right-style, $type) if-map-get($line-color-1, $type);
    border-bottom: $table-border-width solid if-map-get($line-color-1, $type);
    border-left: if-map-get($table-border-left-width, $type) if-map-get($table-border-left-style, $type) if-map-get($line-color-1, $type);

    p {
      text-align: $table-align;
    }

    caption {
      margin-bottom: $table-caption-margin-bottom;
      font-weight: $table-caption-font-weight;
      @if $type == 'prince' {
        line-height: $table-caption-line-height;
      }
    }
    &.lines {
      border-color: if-map-get($line-color-1, $type);
    }

    &.lines tr {
      border-top: $table-border-width solid if-map-get($line-color-1, $type);
      border-bottom: $table-border-width solid if-map-get($line-color-1, $type);
      border-color: if-map-get($line-color-1, $type);
    }

    &.lines th {
      border-color: if-map-get($line-color-1, $type);
    }

    &.lines td {
      border-color: if-map-get($line-color-1, $type);
    }

    &.no-lines tr,
    &.no-lines td {
      border-top: 0;
      border-bottom: 0;
    }

    &.shaded {
      background-color: if-map-get($shade-color-1, $type);
    }

    &.border {
      border: $table-border-width solid if-map-get($line-color-1, $type);
    }

    &.no-border,
    &.no-border tbody,
    &.no-border th,
    &.no-border tr,
    &.no-border td,
    &.no-border tfoot,
    &.no-border thead {
      border-top: 0;
      border-right: 0;
      border-bottom: 0;
      border-left: 0;
    }

    &.alignleft {
      float: left;
      margin-right: if-map-get($table-alignleft-margin-right, $type);
    }

    &.aligncenter {
      margin-left: auto;
      margin-right: auto;
    }

    &.alignright {
      float: right;
      margin-left: if-map-get($table-alignright-margin-left, $type);
    }

    @if $type == 'prince' {
      &.landscape {
        page: landscape_table;
      }
    }
  }

  table,
  tr,
  th {
    page-break-inside: avoid;
  }

  th {
    padding: $table-th-padding-top $table-th-padding-right $table-th-padding-bottom $table-th-padding-left;
    @if $type == 'prince' {
      line-height: $table-th-line-height;
    }
    text-align: $table-th-align;
    vertical-align: $table-th-vertical-align;
    border-top: if-map-get($table-th-border-top-width, $type) if-map-get($table-th-border-top-style, $type) if-map-get($line-color-1, $type);
    border-right: if-map-get($table-th-border-right-width, $type) if-map-get($table-th-border-right-style, $type) if-map-get($line-color-1, $type);
    border-bottom: if-map-get($table-th-border-bottom-width, $type) if-map-get($table-th-border-bottom-style, $type) if-map-get($line-color-1, $type);
    border-left: if-map-get($table-th-border-left-width, $type) if-map-get($table-th-border-left-style, $type) if-map-get($line-color-1, $type);
  }

  td {
    border: if-map-get($table-td-border-width, $type) if-map-get($table-td-border-style, $type) if-map-get($line-color-1, $type);
    padding: $table-td-padding-top $table-td-padding-right $table-td-padding-bottom $table-td-padding-left;
    @if $type == 'prince' {
      line-height: $table-td-line-height;
    }
    text-align: $table-td-align;
    vertical-align: $table-td-vertical-align;
  }

  tr {
    border-top: if-map-get($table-tr-border-top-width, $type) if-map-get($table-tr-border-top-style, $type) if-map-get($line-color-1, $type);
    border-bottom: if-map-get($table-tr-border-bottom-width, $type) if-map-get($table-tr-border-bottom-style, $type) if-map-get($line-color-1, $type);
  }
}

@else {
  .front-matter,
  .part,
  .chapter,
  .back-matter,
  body#tinymce.wp-editor {
    table {
      display: table;
      max-width: 100%;
      margin-top: $table-margin-top;
      margin-bottom: $table-margin-bottom;
      overflow-x: scroll;
      font-family: $table-font-family;
      font-size: $table-font-size;
      hyphens: $table-hyphens;
      line-height: $table-line-height;
      text-align: $table-align;
      border-collapse: collapse;
      border-top: $table-border-width solid if-map-get($line-color-1, $type);
      border-bottom: $table-border-width solid if-map-get($line-color-1, $type);
      border-color: if-map-get($line-color-1, $type);

      p {
        text-align: $table-align;
      }

      caption {
        margin-bottom: $table-caption-margin-bottom;
        font-weight: $table-caption-font-weight;
        line-height: $table-caption-line-height;
      }

      &.lines {
        border-color: if-map-get($line-color-1, $type);
      }

      &.lines tr {
        border-top: $table-border-width solid if-map-get($line-color-1, $type);
        border-bottom: $table-border-width solid if-map-get($line-color-1, $type);
        border-color: if-map-get($line-color-1, $type);
      }

      &.lines th {
        border-color: if-map-get($line-color-1, $type);
      }

      &.lines td {
        border-color: if-map-get($line-color-1, $type);
      }

      &.no-lines tr,
      &.no-lines td {
        border-top: 0;
        border-bottom: 0;
      }

      &.shaded {
        background-color: $shade-color-1;
      }

      &.border {
        border: $table-border-width solid if-map-get($line-color-1, $type);
      }

      &.no-border,
      &.no-border tbody,
      &.no-border th,
      &.no-border tr,
      &.no-border td,
      &.no-border tfoot,
      &.no-border thead {
        border-top: 0;
        border-right: 0;
        border-bottom: 0;
        border-left: 0;
      }

      &.alignleft {
        float: left;
        margin-right: if-map-get($table-alignleft-margin-right, $type);
      }

      &.aligncenter {
        margin-left: auto;
        margin-right: auto;
      }

      &.alignright {
        float: right;
        margin-left: if-map-get($table-alignright-margin-left, $type);
      }
    }

    table,
    tr,
    th {
      page-break-inside: avoid;
    }

    th {
      padding: $table-th-padding-top $table-th-padding-right $table-th-padding-bottom $table-th-padding-left;
      line-height: $table-th-line-height;
      text-align: $table-th-align;
      vertical-align: middle;
      border-top: if-map-get($table-th-border-top-width, $type) if-map-get($table-th-border-top-style, $type) if-map-get($line-color-1, $type);
      border-bottom: if-map-get($table-th-border-bottom-width, $type) if-map-get($table-th-border-bottom-style, $type) if-map-get($line-color-1, $type);
    }

    td {
      padding: $table-td-padding-top $table-td-padding-right $table-td-padding-bottom $table-td-padding-left;
      line-height: $table-td-line-height;
      text-align: $table-td-align;
      vertical-align: middle;
      border: if-map-get($table-td-border-width, $type) if-map-get($table-td-border-style, $type) if-map-get($line-color-1, $type);
    }

    tr {
      border-top: if-map-get($table-tr-border-top-width, $type) if-map-get($table-tr-border-top-style, $type) if-map-get($line-color-1, $type);
      border-bottom: if-map-get($table-tr-border-bottom-width, $type) if-map-get($table-tr-border-bottom-style, $type) if-map-get($line-color-1, $type);
    }
  }
}
